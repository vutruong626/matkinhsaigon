version: '3.8'

services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: mksg_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - mksg_network

  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: mksg_nginx
    restart: unless-stopped
    ports:
      - "8003:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - mksg_network

  # MySQL Service
  db:
    image: mysql:8.0
    container_name: mksg_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: mksg_db
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_PASSWORD: password
      MYSQL_USER: mksg_user
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
      - dbdata:/var/lib/mysql
    networks:
      - mksg_network

  # Redis Service
  redis:
    image: redis:alpine
    container_name: mksg_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - mksg_network

  # phpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: mksg_phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root_password
    networks:
      - mksg_network

# Docker Networks
networks:
  mksg_network:
    driver: bridge

# Volumes
volumes:
  dbdata:
    driver: local
